name: Planetoid Linux and Wasm

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_client_linux_and_wasm:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install package dependencies
      run: sudo apt-get install -y pkg-config libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev

    - name: Build for target x86_64-unknown-linux-gnu
      working-directory: ./client
      run: cargo build

    - name: Run clippy for target x86_64-unknown-linux-gnu
      working-directory: ./client
      run: cargo clippy >clippy.output 2>&1 ; cat clippy.output ;! egrep -q "warning|error:" clippy.output

    - name: Run tests
      working-directory: ./client
      run: cargo test

    - name: Add wasm32-unknown-unknown target
      run: rustup target add wasm32-unknown-unknown

    - name: Build for target wasm32-unknown-unknown
      working-directory: ./client
      run: cargo build --target wasm32-unknown-unknown

    - name: Run clippy for target wasm32-unknown-unknown
      working-directory: ./client
      run: cargo clippy --target wasm32-unknown-unknown >clippy.output 2>&1 ; cat clippy.output ;! egrep -q "warning|error:" clippy.output

    - name: Prepare produced files
      run: |
        mkdir -p planetoid-linux-x86_64 planetoid-wasm
        cp client/target/debug/planetoid planetoid-linux-x86_64
        cp -r client/sounds planetoid-linux-x86_64
        cp client/index.html planetoid-wasm
        cp client/target/wasm32-unknown-unknown/debug/planetoid.wasm planetoid-wasm
        cp -r client/sounds planetoid-wasm
        tar zcvvf planetoid-linux-x86_64.tar.gz planetoid-linux-x86_64
        tar zcvvf planetoid-wasm.tar.gz planetoid-wasm

    - name: 'Upload planetoid-linux-x86_64.tar.gz'
      uses: actions/upload-artifact@v2
      with:
        name: planetoid-linux-x86_64.tar.gz
        path: planetoid-linux-x86_64.tar.gz
        retention-days: 1

    - name: 'Upload planetoid-wasm.tar.gz'
      uses: actions/upload-artifact@v2
      with:
        name: planetoid-wasm.tar.gz
        path: planetoid-wasm.tar.gz
        retention-days: 1
    # - uses: "marvinpinto/action-automatic-releases@latest"
    #   name: Create a Github draft release
    #   with:
    #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
    #     automatic_release_tag: lnxlatest
    #     title: Planetoid client Linux and Wasm
    #     files: |
    #       planetoid-linux-x86_64.tar.gz
    #       planetoid-wasm.tar.gz

  build_client_windows:
    name: Build
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build for target x86_64-pc-windows-msvc
      working-directory: ./client
      run: cargo build

    - name: Run tests
      working-directory: ./client
      run: cargo test

    - name: Prepare produced files
      run: |
        new-item -Name planetoid-windows -ItemType directory
        Copy-Item -Path "client\target\debug\planetoid.exe" -Destination "planetoid-windows"
        Copy-Item -Path "client\sounds" -Destination "planetoid-windows" -Recurse
        Compress-Archive -Path planetoid-windows -DestinationPath planetoid-windows.zip

    - name: 'Upload planetoid-windows.zip'
      uses: actions/upload-artifact@v2
      with:
        name: planetoid-windows.zip
        path: planetoid-windows.zip
        retention-days: 1

    # - uses: "marvinpinto/action-automatic-releases@latest"
    #   name: Create a Github draft release
    #   with:
    #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
    #     automatic_release_tag: winlatest
    #     title: Planetoid client Windows
    #     files: |
    #       planetoid-windows.zip
